{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mouse_",
				"mouse_buttons"
			],
			[
				"UI_",
				"UI_HEIGHT"
			],
			[
				"UI",
				"UI_HEIGHT"
			],
			[
				"Draw",
				"UIDrawText"
			],
			[
				"ju",
				"ui_justification"
			],
			[
				"OpenglREn",
				"OpenglRenderTextureRect"
			],
			[
				"UIIn",
				"UIIndexBuffer"
			],
			[
				"Open",
				"OpenglGenerateUIFont"
			]
		]
	},
	"buffers":
	[
		{
			"file": "code/main.odin",
			"settings":
			{
				"buffer_size": 165,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "main"
					},
					"BQAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAcAAABzbmlmZnVpCQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "ui-"
					},
					"BAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAZAAAAAAAAAAQAAABzbnVpGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAABoAAAAAAAAAGgAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"replace_next",
					null,
					"AQAAAJEAAAAAAAAAkwAAAAAAAAAEAAAAc251aQ",
					"AQAAAAAAAAABAAAAkQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"replace_next",
					null,
					"AQAAADIHAAAAAAAANAcAAAAAAAAEAAAAc251aQ",
					"AQAAAAAAAAABAAAAMgcAAAAAAAA2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"replace_next",
					null,
					"AQAAANoNAAAAAAAA3A0AAAAAAAAEAAAAc251aQ",
					"AQAAAAAAAAABAAAA2g0AAAAAAADeDQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"replace_next",
					null,
					"AQAAAHIOAAAAAAAAdA4AAAAAAAAEAAAAc251aQ",
					"AQAAAAAAAAABAAAAcg4AAAAAAAB2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"replace_next",
					null,
					"AQAAAPgOAAAAAAAA+g4AAAAAAAAEAAAAc251aQ",
					"AQAAAAAAAAABAAAA+A4AAAAAAAD8DgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"cut",
					null,
					"AQAAAAMFAAAAAAAAAwUAAAAAAAAUCwAACnJlYWRfa2V5IDo6IHByb2Moa2V5OiBeYm9vbCkgLT4gYm9vbAp7CglpZiBrZXleIHsKCQlrZXleID0gZmFsc2UKCQlyZXR1cm4gdHJ1ZQoJfSBlbHNlIHsKCQlyZXR1cm4gZmFsc2UKCX0KfQoKcHJvY2Vzc19rZXlib2FyZF9pbnB1dCA6OiBwcm9jKGFjdGlvbjogaW50LCBrZXlfc3RhdGU6IF5ib29sLCByZXBlYXQ6IGJvb2wpCnsKCWlmIGFjdGlvbiA9PSBpbnQoZ2xmdy5SRUxFQVNFKQoJewoJCWtleV9zdGF0ZV4gPSBmYWxzZQoJfSBlbHNlIHsKCQlpZiByZXBlYXQgewoJCQlpZiBhY3Rpb24gPT0gaW50KGdsZncuUFJFU1MpIHx8IGFjdGlvbiA9PSBpbnQoZ2xmdy5SRVBFQVQpCgkJCXsKCQkJCWtleV9zdGF0ZV4gPSB0cnVlCgkJCX0KCQl9IGVsc2UgewoJCQlpZiBhY3Rpb24gPT0gaW50KGdsZncuUFJFU1MpCgkJCXsKCQkJCWtleV9zdGF0ZV4gPSB0cnVlCgkJCX0KCQl9Cgl9Cn0KCmtleWJvYXJkX2NhbGxiYWNrIDo6IHByb2MoV2luZG93OiBnbGZ3LldpbmRvd0hhbmRsZSwga2V5OiBpbnQsIHNjYW5jb2RlOiBpbnQsIGFjdGlvbjogaW50LCBtb2RzOiBpbnQpCnsKCXVzaW5nIHVpLCBmbXQKCglzd2l0Y2gga2V5Cgl7CgkJY2FzZSBnbGZ3LktFWV9MRUZUOgkJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMubGVmdCwgdHJ1ZSkKCQljYXNlIGdsZncuS0VZX1JJR0hUOgkJCXByb2Nlc3Nfa2V5Ym9hcmRfaW5wdXQoYWN0aW9uLCAmc3RhdGUua2V5cy5yaWdodCwgdHJ1ZSkKCQljYXNlIGdsZncuS0VZX1VQOgkJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMudXAsIHRydWUpCgkJY2FzZSBnbGZ3LktFWV9ET1dOOgkJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuZG93biwgdHJ1ZSkKCQkKCQljYXNlIGdsZncuS0VZX0VTQ0FQRToJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuZXNjYXBlLCB0cnVlKQoJCWNhc2UgZ2xmdy5LRVlfVEFCOgkJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMudGFiLCBmYWxzZSkKCQljYXNlIGdsZncuS0VZX0VOVEVSOgkJIAlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuZW50ZXIsIHRydWUpCgkJY2FzZSBnbGZ3LktFWV9TUEFDRToJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuc3BhY2UsIHRydWUpCgkJY2FzZSBnbGZ3LktFWV9CQUNLU1BBQ0U6CQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuYmFja3NwYWNlLCB0cnVlKQoJCWNhc2UgZ2xmdy5LRVlfREVMRVRFOgkJCXByb2Nlc3Nfa2V5Ym9hcmRfaW5wdXQoYWN0aW9uLCAmc3RhdGUua2V5cy5kZWxldGUsIHRydWUpCgkJCgkJY2FzZSBnbGZ3LktFWV9LUF9FTlRFUjoJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuZW50ZXIsIHRydWUpCgkJY2FzZSBnbGZ3LktFWV9LUF9TVUJUUkFDVDoJCXByb2Nlc3Nfa2V5Ym9hcmRfaW5wdXQoYWN0aW9uLCAmc3RhdGUua2V5cy5uX21pbnVzLCBmYWxzZSkKCQljYXNlIGdsZncuS0VZX0tQX0FERDoJCQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMubl9wbHVzLCBmYWxzZSkKCQkKCQljYXNlIGdsZncuS0VZX0xFRlRfQUxUOgkJCXByb2Nlc3Nfa2V5Ym9hcmRfaW5wdXQoYWN0aW9uLCAmc3RhdGUua2V5cy5hbHQsIGZhbHNlKQoJCWNhc2UgZ2xmdy5LRVlfUklHSFRfQUxUOgkJcHJvY2Vzc19rZXlib2FyZF9pbnB1dChhY3Rpb24sICZzdGF0ZS5rZXlzLmFsdCwgZmFsc2UpCgkJCgkJY2FzZSBnbGZ3LktFWV9MRUZUX0NPTlRST0w6CQlwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuY3RybCwgZmFsc2UpCgkJY2FzZSBnbGZ3LktFWV9SSUdIVF9DT05UUk9MOglwcm9jZXNzX2tleWJvYXJkX2lucHV0KGFjdGlvbiwgJnN0YXRlLmtleXMuY3RybCwgZmFsc2UpCgkJCgkJY2FzZSBnbGZ3LktFWV9MRUZUX1NISUZUOgkJcHJvY2Vzc19rZXlib2FyZF9pbnB1dChhY3Rpb24sICZzdGF0ZS5rZXlzLnNoaWZ0LCBmYWxzZSkKCQljYXNlIGdsZncuS0VZX1JJR0hUX1NISUZUOgkJcHJvY2Vzc19rZXlib2FyZF9pbnB1dChhY3Rpb24sICZzdGF0ZS5rZXlzLnNoaWZ0LCBmYWxzZSkKCX0KfQoKdHlwaW5nX2NhbGxiYWNrIDo6IHByb2Mod2luZG93OiBnbGZ3LldpbmRvd0hhbmRsZSwgY29kZXBvaW50OiB1MzIpCnsKCXVzaW5nIHVpCglmbXQucHJpbnRsbihydW5lKGNvZGVwb2ludCkpCgkvLyBTdGF0ZS5VSUxhc3RDaGFyID0gcnVuZShjb2RlcG9pbnQpOwp9CgpzY3JvbGxfY2FsbGJhY2sgOjogcHJvYyh3aW5kb3c6IGdsZncuV2luZG93SGFuZGxlLCB4OiBmNjQsIHk6IGY2NCkKewoJdXNpbmcgdWkKCXN0YXRlLm1vdXNlLnNjcm9sbCA9IGYzMih5LzEwKQp9Cgptb3VzZV9jYWxsYmFjayA6OiBwcm9jKHdpbmRvdzogZ2xmdy5XaW5kb3dIYW5kbGUsIGJ1dHRvbjogaW50LCBhY3Rpb246IGludCwgbW9kczogaW50KQp7Cgl1c2luZyB1aQoJbW91c2VfYnV0dG9uczogWzNdXkJ1dHRvbiA9IHsgJnN0YXRlLm1vdXNlLmxlZnQsICZzdGF0ZS5tb3VzZS5yaWdodCwgJnN0YXRlLm1vdXNlLm1pZGRsZSB9Cglmb3IgbW91c2VfYnV0dG9uLCBpbmRleCBpbiBtb3VzZV9idXR0b25zCgl7CgkJaWYgYnV0dG9uID09IGluZGV4IHsKCQkJaWYgYWN0aW9uID09IGludChnbGZ3LlBSRVNTKSBkbyBtb3VzZV9idXR0b25eID0gLkNMSUNLCgkJCWlmIGFjdGlvbiA9PSBpbnQoZ2xmdy5SRUxFQVNFKSBkbyBtb3VzZV9idXR0b25eID0gLlVQCgkJfQoJfQp9Cg",
					"AQAAAAAAAAABAAAAAwUAAAAAAAAXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					6,
					"swap_line_up",
					null,
					"DAAAAOcAAAAAAAAA5wAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQrmAAAAAAAAADwBAAAAAAAAAAAAAOYAAAAAAAAA5gAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQrjAAAAAAAAADkBAAAAAAAAAAAAAOMAAAAAAAAA4wAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQraAAAAAAAAADABAAAAAAAAAAAAANoAAAAAAAAA2gAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQqvAAAAAAAAAAUBAAAAAAAAAAAAAK8AAAAAAAAArwAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQqsAAAAAAAAAAIBAAAAAAAAAAAAAKwAAAAAAAAArAAAAAAAAABWAAAACXN0YXRlID0gbmV3KFN0YXRlKQoJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQqVAAAAAAAAAOsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAEAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAgEJA"
				],
				[
					81,
					6,
					"swap_line_down",
					null,
					"DAAAAO0AAAAAAAAALwEAAAAAAAAAAAAAqQAAAAAAAACpAAAAAAAAAEIAAAAJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQoEAQAAAAAAAEYBAAAAAAAAAAAAAKsAAAAAAAAAqwAAAAAAAABCAAAACXN0YXRlLndpbmRvdyA9IGdsZncuQ3JlYXRlV2luZG93KFdJRFRILCBIRUlHSFQsIFRJVExFLCBuaWwsIG5pbCkKBwEAAAAAAABJAQAAAAAAAAAAAADCAAAAAAAAAMIAAAAAAAAAQgAAAAlzdGF0ZS53aW5kb3cgPSBnbGZ3LkNyZWF0ZVdpbmRvdyhXSURUSCwgSEVJR0hULCBUSVRMRSwgbmlsLCBuaWwpCjIBAAAAAAAAdAEAAAAAAAAAAAAAxQAAAAAAAADFAAAAAAAAAEIAAAAJc3RhdGUud2luZG93ID0gZ2xmdy5DcmVhdGVXaW5kb3coV0lEVEgsIEhFSUdIVCwgVElUTEUsIG5pbCwgbmlsKQo7AQAAAAAAAH0BAAAAAAAAAAAAAPAAAAAAAAAA8AAAAAAAAABCAAAACXN0YXRlLndpbmRvdyA9IGdsZncuQ3JlYXRlV2luZG93KFdJRFRILCBIRUlHSFQsIFRJVExFLCBuaWwsIG5pbCkKPgEAAAAAAACAAQAAAAAAAAAAAAD5AAAAAAAAAPkAAAAAAAAAQgAAAAlzdGF0ZS53aW5kb3cgPSBnbGZ3LkNyZWF0ZVdpbmRvdyhXSURUSCwgSEVJR0hULCBUSVRMRSwgbmlsLCBuaWwpCg",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAgEJA"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAgEJA"
				],
				[
					87,
					1,
					"cut",
					null,
					"AQAAAJQAAAAAAAAAlAAAAAAAAAABAwAACglzdGF0ZSA9IG5ldyhTdGF0ZSkKCQoJaWYgIWJvb2woZ2xmdy5Jbml0KCkpCgl7CgkJZm10LmVwcmludGxuKCJHTEZXIGhhcyBmYWlsZWQgdG8gbG9hZC4iKQoJCXJldHVybgoJfQoJCglzdGF0ZS53aW5kb3cgPSBnbGZ3LkNyZWF0ZVdpbmRvdyhXSURUSCwgSEVJR0hULCBUSVRMRSwgbmlsLCBuaWwpCgoJZGVmZXIgZ2xmdy5EZXN0cm95V2luZG93KHN0YXRlLndpbmRvdykKCWRlZmVyIGdsZncuVGVybWluYXRlKCkKCWRlZmVyIGZyZWUoc3RhdGUpCgoJaWYgc3RhdGUud2luZG93ID09IG5pbAoJewoJCWZtdC5lcHJpbnRsbigiR0xGVyBoYXMgZmFpbGVkIHRvIGxvYWQgdGhlIHdpbmRvdy4iKQoJCXJldHVybgoJfQoKCWdsZncuTWFrZUNvbnRleHRDdXJyZW50KHN0YXRlLndpbmRvdykKCWdsZncuU2V0S2V5Q2FsbGJhY2soc3RhdGUud2luZG93LCBjYXN0KGdsZncuS2V5UHJvYylrZXlib2FyZF9jYWxsYmFjaykKCWdsZncuU2V0TW91c2VCdXR0b25DYWxsYmFjayhzdGF0ZS53aW5kb3csIGNhc3QoZ2xmdy5Nb3VzZUJ1dHRvblByb2MpbW91c2VfY2FsbGJhY2spCglnbGZ3LlNldFNjcm9sbENhbGxiYWNrKHN0YXRlLndpbmRvdywgY2FzdChnbGZ3LlNjcm9sbFByb2Mpc2Nyb2xsX2NhbGxiYWNrKQoJZ2xmdy5TZXRDaGFyQ2FsbGJhY2soc3RhdGUud2luZG93LCBjYXN0KGdsZncuQ2hhclByb2MpdHlwaW5nX2NhbGxiYWNrKQoJZ2xmdy5TZXRXaW5kb3dVc2VyUG9pbnRlcihzdGF0ZS53aW5kb3csIHN0YXRlKQoKCW9wZW5nbF9pbml0KCkKCXVpX2luaXQoKQ",
					"AQAAAAAAAAABAAAAlAAAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"paste",
					null,
					"AQAAAJQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "ui."
					},
					"BAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAlAAAAAAAAACUAAAAAAAAAAEAAAAJlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAgEJA"
				],
				[
					97,
					2,
					"cut",
					null,
					"AgAAAIoAAAAAAAAAigAAAAAAAAAKAAAACXVzaW5nIHVpCooAAAAAAAAAigAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAQFBA"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIoAAAAAAAAAiwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\tusing"
					},
					"BgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " ui"
					},
					"AwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					3,
					"right_delete",
					null,
					"BAAAAJcAAAAAAAAAlwAAAAAAAAABAAAAdZQAAAAAAAAAlAAAAAAAAAABAAAACZYAAAAAAAAAlgAAAAAAAAABAAAAaZYAAAAAAAAAlgAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAgEJA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n\tinit"
					},
					"BgAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK8AAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAAsgAAAAAAAACyAAAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAsQAAAAAAAACxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"left_delete",
					null,
					"AQAAALMAAAAAAAAAswAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"right_delete",
					null,
					"AQAAALMAAAAAAAAAswAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAALIAAAAAAAAAsgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\n\tl"
					},
					"AwAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "oop)_"
					},
					"BQAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					2,
					"left_delete",
					null,
					"AgAAALkAAAAAAAAAuQAAAAAAAAABAAAAX7gAAAAAAAAAuAAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALgAAAAAAAAAugAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALkAAAAAAAAAugAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"right_delete",
					null,
					"AQAAALoAAAAAAAAAugAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "state."
					},
					"BgAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"left_delete",
					null,
					"AQAAAL4AAAAAAAAAvgAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BQAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"right_delete",
					null,
					"AQAAALgAAAAAAAAAuAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAQFdA"
				],
				[
					143,
					1,
					"cut",
					null,
					"AQAAAMcAAAAAAAAAxwAAAAAAAABtAQAACWZvciAhZ2xmdy5XaW5kb3dTaG91bGRDbG9zZShzdGF0ZS53aW5kb3cpCgl7CgkJZ2xmdy5Qb2xsRXZlbnRzKCkKCgkJd2lkdGgsIGhlaWdodCA6PSBnbGZ3LkdldFdpbmRvd1NpemUoc3RhdGUud2luZG93KQoJCXN0YXRlLndpbmRvd19zaXplID0ge3dpZHRoLCBoZWlnaHR9CgkJCgkJbW91c2VYLCBtb3VzZVkgOj0gZ2xmdy5HZXRDdXJzb3JQb3Moc3RhdGUud2luZG93KQoJCW9sZF9tb3VzZSA6PSBzdGF0ZS5tb3VzZS5wb3MKCQlzdGF0ZS5tb3VzZS5wb3MgPSB7aTMyKG1vdXNlWCksIGkzMihtb3VzZVkpfQoJCXN0YXRlLm1vdXNlLmRlbHRhID0gc3RhdGUubW91c2UucG9zIC0gb2xkX21vdXNlCgoJCXVwZGF0ZSgpCgkJcmVuZGVyKCkKCX0",
					"AQAAAAAAAAABAAAANAIAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAALAAAAAAAAAAsAAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAsQAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAL0AAAAAAAAAvQAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAvgAAAAAAAAC9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"cut",
					null,
					"AQAAAMQAAAAAAAAAxAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"cut",
					null,
					"AQAAAEMAAAAAAAAAQwAAAAAAAAA0AAAACldJRFRIICAJOjogMTI4MApIRUlHSFQgCTo6IDcyMApUSVRMRSAJOjogIlNuaWZmIFVJIg",
					"AQAAAAAAAAABAAAAQwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAIMAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"left_delete",
					null,
					"AQAAAIMAAAAAAAAAgwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAP///////+9/"
				],
				[
					167,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIcAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAiQAAAAAAAACJAAAAAAAAAAEAAAAJiQAAAAAAAACLAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					2,
					"swap_line_up",
					null,
					"BAAAAI8AAAAAAAAAjwAAAAAAAAANAAAACWxvb3Aoc3RhdGUpCowAAAAAAAAAmQAAAAAAAAAAAAAAjAAAAAAAAACMAAAAAAAAAA0AAAAJbG9vcChzdGF0ZSkKiQAAAAAAAACWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAwFJA"
				],
				[
					171,
					1,
					"indent",
					null,
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAwFJA"
				],
				[
					173,
					1,
					"cut",
					null,
					"AQAAAJcAAAAAAAAAlwAAAAAAAAADAAAACQkK",
					"AQAAAAAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAFxA"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAAIYAAAAAAAAAhgAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAgEJA"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					2,
					"left_delete",
					null,
					"AgAAAIYAAAAAAAAAhgAAAAAAAAABAAAAIIUAAAAAAAAAhQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAH8AAAAAAAAAfwAAAAAAAAAFAAAAc3RhdGU",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAIoAAAAAAAAAigAAAAAAAAAFAAAAc3RhdGU",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"cut",
					null,
					"AQAAAI8AAAAAAAAAjwAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAgF5A"
				],
				[
					200,
					1,
					"cut",
					null,
					"AQAAADEAAAAAAAAAMQAAAAAAAAASAAAAaW1wb3J0ICJjb3JlOmZtdCIK",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					2,
					"cut",
					null,
					"AgAAABwAAAAAAAAAHAAAAAAAAAAVAAAAaW1wb3J0ICJ2ZW5kb3I6Z2xmdyIKHAAAAAAAAAAcAAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"paste",
					null,
					"AQAAAE0AAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"cut",
					null,
					"AQAAAE0AAAAAAAAATQAAAAAAAAATAAAACWRlZmVyIGZyZWUoc3RhdGUpCg",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"cut",
					null,
					"AQAAAE0AAAAAAAAATQAAAAAAAAACAAAACQo",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAZwAAAAAAAABnAAAAAAAAAAEAAAAJaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGgAAAAAAAAAaAAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"paste",
					null,
					"AQAAAGoAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"unindent",
					null,
					"AQAAAGkAAAAAAAAAaQAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAgEdA"
				],
				[
					236,
					1,
					"cut",
					null,
					"AQAAAGkAAAAAAAAAaQAAAAAAAAATAAAACXVwZGF0ZSgpCglyZW5kZXIoKQ",
					"AQAAAAAAAAABAAAAaQAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"right_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAgF5A"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAagAAAAAAAAAAAAAAZQAAAAAAAABlAAAAAAAAAAIAAAAJCQ",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"paste",
					null,
					"AQAAAGgAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"left_delete",
					null,
					"AQAAAGgAAAAAAAAAaAAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAFxA"
				],
				[
					252,
					1,
					"indent",
					null,
					"AQAAAHEAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAwFJA"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "\nfpr"
					},
					"BgAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAFxA"
				],
				[
					255,
					2,
					"left_delete",
					null,
					"AgAAAGAAAAAAAAAAYAAAAAAAAAABAAAAcl8AAAAAAAAAXwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"left_delete",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "state.equi"
					},
					"CgAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					3,
					"left_delete",
					null,
					"AwAAAGwAAAAAAAAAbAAAAAAAAAABAAAAaWsAAAAAAAAAawAAAAAAAAABAAAAdWoAAAAAAAAAagAAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAGoAAAAAAAAAawAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					2,
					"left_delete",
					null,
					"AgAAAGoAAAAAAAAAagAAAAAAAAABAAAAcWkAAAAAAAAAaQAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "quit"
					},
					"BAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdwAAAAAAAAAAAAAAcgAAAAAAAAByAAAAAAAAAAIAAAAJCXIAAAAAAAAAdQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					2,
					"swap_line_up",
					null,
					"BAAAAHoAAAAAAAAAegAAAAAAAAAJAAAACQlsb29wKCkKdgAAAAAAAAB/AAAAAAAAAAAAAAB2AAAAAAAAAHYAAAAAAAAACQAAAAkJbG9vcCgpCnIAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAFxA"
				],
				[
					269,
					1,
					"indent",
					null,
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAFxA"
				],
				[
					271,
					3,
					"swap_line_up",
					null,
					"BgAAAIUAAAAAAAAAhQAAAAAAAAALAAAACQl1cGRhdGUoKQqEAAAAAAAAAI8AAAAAAAAAAAAAAIQAAAAAAAAAhAAAAAAAAAALAAAACQl1cGRhdGUoKQqAAAAAAAAAAIsAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAAALAAAACQl1cGRhdGUoKQp8AAAAAAAAAIcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAwGJA"
				],
				[
					272,
					1,
					"indent",
					null,
					"AQAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAwGJA"
				],
				[
					274,
					1,
					"swap_line_up",
					null,
					"AgAAAJAAAAAAAAAAkAAAAAAAAAABAAAACowAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAYGdA"
				],
				[
					276,
					3,
					"swap_line_up",
					null,
					"BgAAAJEAAAAAAAAAkQAAAAAAAAALAAAACQlyZW5kZXIoKQqNAAAAAAAAAJgAAAAAAAAAAAAAAI0AAAAAAAAAjQAAAAAAAAALAAAACQlyZW5kZXIoKQqMAAAAAAAAAJcAAAAAAAAAAAAAAIwAAAAAAAAAjAAAAAAAAAALAAAACQlyZW5kZXIoKQqIAAAAAAAAAJMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAYGdA"
				],
				[
					277,
					1,
					"indent",
					null,
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAYGdA"
				],
				[
					279,
					2,
					"cut",
					null,
					"AgAAAJQAAAAAAAAAlAAAAAAAAAAEAAAACQkJCpQAAAAAAAAAlAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAYGdA"
				],
				[
					284,
					3,
					"cut",
					null,
					"AwAAAJsAAAAAAAAAmwAAAAAAAAABAAAACpsAAAAAAAAAmwAAAAAAAAABAAAACpsAAAAAAAAAmwAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "update_g"
					},
					"CQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB2AAAAAAAAAAQAAABsb29wdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": ";fw"
					},
					"AwAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					3,
					"left_delete",
					null,
					"AwAAAH8AAAAAAAAAfwAAAAAAAAABAAAAd34AAAAAAAAAfgAAAAAAAAABAAAAZn0AAAAAAAAAfQAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "lfw"
					},
					"AwAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACSAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					4,
					"left_delete",
					null,
					"BAAAAJEAAAAAAAAAkQAAAAAAAAABAAAACZAAAAAAAAAAkAAAAAAAAAABAAAACY8AAAAAAAAAjwAAAAAAAAABAAAACY4AAAAAAAAAjgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "_ui"
					},
					"AwAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "_ui"
					},
					"AwAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwAAAAAAAACbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "UI_"
					},
					"AwAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					4,
					"left_delete",
					null,
					"BAAAAIgAAAAAAAAAiAAAAAAAAAABAAAAX4cAAAAAAAAAhwAAAAAAAAABAAAASYYAAAAAAAAAhgAAAAAAAAABAAAAVYUAAAAAAAAAhQAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"left_delete",
					null,
					"AQAAAIUAAAAAAAAAhQAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "ui_"
					},
					"AwAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"indent",
					null,
					"AQAAAIMAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "UI"
					},
					"AgAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAFxA"
				],
				[
					325,
					2,
					"left_delete",
					null,
					"AgAAAJkAAAAAAAAAmQAAAAAAAAABAAAASZgAAAAAAAAAmAAAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "ui_"
					},
					"AwAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					3,
					"right_delete",
					null,
					"AwAAAKEAAAAAAAAAoQAAAAAAAAABAAAAX6EAAAAAAAAAoQAAAAAAAAABAAAAdaEAAAAAAAAAoQAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					3,
					"right_delete",
					null,
					"AwAAAI8AAAAAAAAAjwAAAAAAAAABAAAAX48AAAAAAAAAjwAAAAAAAAABAAAAdY8AAAAAAAAAjwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAgGhA"
				],
				[
					337,
					1,
					"left_delete",
					null,
					"AQAAAHsAAAAAAAAAewAAAAAAAAAFAAAAX2dsZnc",
					"AQAAAAAAAAABAAAAewAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "code/ui/state.odin",
			"settings":
			{
				"buffer_size": 4826,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAPICAAAAAAAABg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					4,
					"right_delete",
					null,
					"BAAAACEFAAAAAAAAIQUAAAAAAAABAAAAdSEFAAAAAAAAIQUAAAAAAAABAAAAaSEFAAAAAAAAIQUAAAAAAAABAAAALCEFAAAAAAAAIQUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIQUAAAAAAAAhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAL4LAAAAAAAAvgsAAAAAAAAKAAAACXVzaW5nIHVpCg",
					"AQAAAAAAAAABAAAAxwsAAAAAAADHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"cut",
					null,
					"AQAAAEwMAAAAAAAATAwAAAAAAAAKAAAACXVzaW5nIHVpCg",
					"AQAAAAAAAAABAAAAVQwAAAAAAABVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"cut",
					null,
					"AQAAAMgMAAAAAAAAyAwAAAAAAAAKAAAACXVzaW5nIHVpCg",
					"AQAAAAAAAAABAAAA0QwAAAAAAADRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAL8LAAAAAAAAwgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"cut",
					null,
					"AgAAABoFAAAAAAAAGgUAAAAAAAALAAAACXVzaW5nIGZtdAoaBQAAAAAAABoFAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAJAUAAAAAAAAkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "init"
					},
					"BAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAD8AgAAAAAAAP0CAAAAAAAAAAAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gIAAAAAAAD6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP8CAAAAAAAAAAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAP8CAAAAAAAA/wIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP8CAAAAAAAAAQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAADAAAAAAAAAQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					2,
					"right_delete",
					null,
					"AgAAAAEDAAAAAAAAAQMAAAAAAAABAAAAKQEDAAAAAAAAAQMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQMAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAAQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQMAAAAAAAABAwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " ^"
					},
					"AgAAAAQDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAMAAAAAAAAEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BQAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAkDAAAAAAAAAAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert_completion",
					{
						"completion": "key_state",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "key_state"
					},
					"AgAAAAYDAAAAAAAABgMAAAAAAAAFAAAAU3RhdGUGAwAAAAAAAA8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					9,
					"left_delete",
					null,
					"CQAAAA4DAAAAAAAADgMAAAAAAAABAAAAZQ0DAAAAAAAADQMAAAAAAAABAAAAdAwDAAAAAAAADAMAAAAAAAABAAAAYQsDAAAAAAAACwMAAAAAAAABAAAAdAoDAAAAAAAACgMAAAAAAAABAAAAcwkDAAAAAAAACQMAAAAAAAABAAAAXwgDAAAAAAAACAMAAAAAAAABAAAAeQcDAAAAAAAABwMAAAAAAAABAAAAZQYDAAAAAAAABgMAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAADwMAAAAAAAAPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "State"
					},
					"BQAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAkDAAAAAAAAAAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsDAAAAAAAADAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAwDAAAAAAAADgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAMAAAAAAAAMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAOAwAAAAAAAA8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABEDAAAAAAAAEgMAAAAAAAAAAAAADgMAAAAAAAAOAwAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAEQMAAAAAAAARAwAAAAAAAAAAAAAAgEJA"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAAsDAAAAAAAACwMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAADAMAAAAAAAAMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAsDAAAAAAAADAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"paste",
					null,
					"AQAAAA4DAAAAAAAADwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"cut",
					null,
					"AQAAAA4DAAAAAAAADgMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAPQFAAAAAAAA9QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA9gUAAAAAAAD2BQAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAA9QUAAAAAAAD1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\treturn"
					},
					"CAAAAPYFAAAAAAAA9wUAAAAAAAAAAAAA+AUAAAAAAAD4BQAAAAAAAAEAAAAJ9wUAAAAAAAD4BQAAAAAAAAAAAAD4BQAAAAAAAPkFAAAAAAAAAAAAAPkFAAAAAAAA+gUAAAAAAAAAAAAA+gUAAAAAAAD7BQAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gUAAAAAAAD2BQAAAAAAAAAAAAAAgEJA"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " state"
					},
					"BgAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA/gUAAAAAAAD/BQAAAAAAAAAAAAD/BQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "^State"
					},
					"BgAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAACAwAAAAAAAAAAAAACAwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAABAMAAAAAAAAAAAAABAMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"cut",
					null,
					"AQAAABQDAAAAAAAAFAMAAAAAAAAUAAAACXN0YXRlID0gbmV3KFN0YXRlKQo",
					"AQAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAQGZA"
				],
				[
					84,
					1,
					"right_delete",
					null,
					"AQAAABQDAAAAAAAAFAMAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAFAMAAAAAAAAUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					4,
					"left_delete",
					null,
					"BAAAAAoDAAAAAAAACgMAAAAAAAAHAAAAIF5TdGF0ZQkDAAAAAAAACQMAAAAAAAABAAAAPggDAAAAAAAACAMAAAAAAAABAAAALQcDAAAAAAAABwMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEQMAAAAAAAAKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"right_delete",
					null,
					"AgAAANsFAAAAAAAA2wUAAAAAAAAPAAAACQoJcmV0dXJuIHN0YXRl2wUAAAAAAADbBQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA6gUAAAAAAADbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD6BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AUAAAAAAAD4BQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "loop"
					},
					"BAAAAPkFAAAAAAAA+gUAAAAAAAAAAAAA+gUAAAAAAAD7BQAAAAAAAAAAAAD7BQAAAAAAAPwFAAAAAAAAAAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QUAAAAAAAD5BQAAAAAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA/gUAAAAAAAD/BQAAAAAAAAAAAAD/BQAAAAAAAAAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QUAAAAAAAD9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUGAAAAAAAABwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAYGAAAAAAAABwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgYAAAAAAAAGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"right_delete",
					null,
					"AQAAAAcGAAAAAAAABwYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAcGAAAAAAAACAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAAAgGAAAAAAAAdQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AwAAAHUHAAAAAAAAdgcAAAAAAAAAAAAAdgcAAAAAAAB3BwAAAAAAAAAAAAB3BwAAAAAAAHgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQcAAAAAAAB1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AgAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwYAAAAAAAAHBgAAAAAAAP///////+9/"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAAAgGAAAAAAAACAYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAgGAAAAAAAACgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAgGAAAAAAAACAYAAAAAAAABAAAAWwgGAAAAAAAACAYAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAgGAAAAAAAACgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"right_delete",
					null,
					"AQAAAAkGAAAAAAAACQYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"unindent",
					null,
					"AQAAAHgHAAAAAAAAeAcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAeAcAAAAAAAB4BwAAAAAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "^Stae"
					},
					"BQAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgYAAAAAAAAGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAAoGAAAAAAAACgYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "state:"
					},
					"BgAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgYAAAAAAAAGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"right_delete",
					null,
					"AQAAAAYGAAAAAAAABgYAAAAAAAAMAAAAc3RhdGU6XlN0YXRl",
					"AQAAAAAAAAABAAAABgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAAAADAAAAAAAAAAMAAAAAAAAGAAAAXlN0YXRl",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"paste",
					null,
					"AQAAAEAAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHQAAAAAAAAAdQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "ui-odin"
					},
					"CAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABsAAAAAAAAAAgAAABTbmlmZiBVSWwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"cut",
					null,
					"AQAAADgDAAAAAAAAOAMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgDAAAAAAAAOQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "String"
					},
					"BgAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADkDAAAAAAAAOQMAAAAAAAAGAAAAU3RyaW5n",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAGxA"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "string"
					},
					"BgAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8DAAAAAAAAkAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwMAAAAAAACPAwAAAAAAAAAAAAAAAGxA"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "bool"
					},
					"BQAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6AwAAAAAAAAYAAABzdHJpbmc6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BQAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " falses"
					},
					"BwAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACLBAAAAAAAAAAAAACLBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAjQQAAAAAAAAAAAAAjQQAAAAAAACOBAAAAAAAAAAAAACOBAAAAAAAAI8EAAAAAAAAAAAAAI8EAAAAAAAAkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQQAAAAAAACJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"left_delete",
					null,
					"AQAAAI8EAAAAAAAAjwQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADkGAAAAAAAAAAAAADkGAAAAAAAAOgYAAAAAAAAAAAAANwYAAAAAAAA3BgAAAAAAAAEAAAAJOQYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADsGAAAAAAAAAAAAADsGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA9BgAAAAAAAAAAAAA9BgAAAAAAAD4GAAAAAAAAAAAAAD4GAAAAAAAAPwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAAD8GAAAAAAAAQAYAAAAAAAAAAAAAQAYAAAAAAABBBgAAAAAAAAAAAABBBgAAAAAAAEIGAAAAAAAAAAAAAEIGAAAAAAAAQwYAAAAAAAAAAAAAQwYAAAAAAABEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwYAAAAAAAA/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\nimport"
					},
					"BwAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAEcAAAAAAAAARwAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEcAAAAAAAAASQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "core:fmg"
					},
					"CAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"left_delete",
					null,
					"AQAAAE8AAAAAAAAATwAAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAE8AAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					2,
					"swap_line_up",
					null,
					"BAAAAEAAAAAAAAAAQAAAAAAAAAASAAAAaW1wb3J0ICJjb3JlOmZtdCIKJgAAAAAAAAA4AAAAAAAAAAAAAAAmAAAAAAAAACYAAAAAAAAAEgAAAGltcG9ydCAiY29yZTpmbXQiCgwAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAoHAAAAAAAACwcAAAAAAAAAAAAACwcAAAAAAAANBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgcAAAAAAAAKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "\nfmt.proi"
					},
					"CwAAAAoHAAAAAAAACwcAAAAAAAAAAAAACwcAAAAAAAANBwAAAAAAAAAAAAAOBwAAAAAAAA4HAAAAAAAAAgAAAAkJDQcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA8HAAAAAAAAEAcAAAAAAAAAAAAAEAcAAAAAAAARBwAAAAAAAAAAAAARBwAAAAAAABIHAAAAAAAAAAAAABIHAAAAAAAAEwcAAAAAAAAAAAAAEwcAAAAAAAAUBwAAAAAAAAAAAAAUBwAAAAAAABUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgcAAAAAAAAKBwAAAAAAAAAAAAAAwFJA"
				],
				[
					200,
					2,
					"left_delete",
					null,
					"AgAAABQHAAAAAAAAFAcAAAAAAAABAAAAaRMHAAAAAAAAEwcAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAFQcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "intln"
					},
					"BQAAABMHAAAAAAAAFAcAAAAAAAAAAAAAFAcAAAAAAAAVBwAAAAAAAAAAAAAVBwAAAAAAABYHAAAAAAAAAAAAABYHAAAAAAAAFwcAAAAAAAAAAAAAFwcAAAAAAAAYBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwcAAAAAAAATBwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABgHAAAAAAAAGgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAcAAAAAAAAYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "satte."
					},
					"BgAAABkHAAAAAAAAGgcAAAAAAAAAAAAAGgcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAeBwAAAAAAAAAAAAAeBwAAAAAAAB8HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQcAAAAAAAAZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					5,
					"left_delete",
					null,
					"BQAAAB4HAAAAAAAAHgcAAAAAAAABAAAALh0HAAAAAAAAHQcAAAAAAAABAAAAZRwHAAAAAAAAHAcAAAAAAAABAAAAdBsHAAAAAAAAGwcAAAAAAAABAAAAdBoHAAAAAAAAGgcAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAHwcAAAAAAAAfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "tate.wind"
					},
					"CQAAABoHAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAcBwAAAAAAAAAAAAAcBwAAAAAAAB0HAAAAAAAAAAAAAB0HAAAAAAAAHgcAAAAAAAAAAAAAHgcAAAAAAAAfBwAAAAAAAAAAAAAfBwAAAAAAACAHAAAAAAAAAAAAACAHAAAAAAAAIQcAAAAAAAAAAAAAIQcAAAAAAAAiBwAAAAAAAAAAAAAiBwAAAAAAACMHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert_completion",
					{
						"completion": "window",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "window"
					},
					"AgAAAB8HAAAAAAAAHwcAAAAAAAAEAAAAd2luZB8HAAAAAAAAJQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwcAAAAAAAAjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "_s"
					},
					"AgAAACUHAAAAAAAAJgcAAAAAAAAAAAAAJgcAAAAAAAAnBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQcAAAAAAAAlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert_completion",
					{
						"completion": "window_size",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "window_size"
					},
					"AgAAAB8HAAAAAAAAHwcAAAAAAAAIAAAAd2luZG93X3MfBwAAAAAAACoHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwcAAAAAAAAnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"cut",
					null,
					"AQAAAC4EAAAAAAAALgQAAAAAAAATAAAACWRlZmVyIGZyZWUoc3RhdGUpCg",
					"AQAAAAAAAAABAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"cut",
					null,
					"AQAAAO4DAAAAAAAA7gMAAAAAAAA/AAAACWRlZmVyIGdsZncuRGVzdHJveVdpbmRvdyhzdGF0ZS53aW5kb3cpCglkZWZlciBnbGZ3LlRlcm1pbmF0ZSgp",
					"AQAAAAAAAAABAAAALQQAAAAAAADuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					2,
					"right_delete",
					null,
					"AgAAAO4DAAAAAAAA7gMAAAAAAAABAAAACu4DAAAAAAAA7gMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA7gMAAAAAAADuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "\n\nterminate"
					},
					"CwAAAKgHAAAAAAAAqQcAAAAAAAAAAAAAqQcAAAAAAACqBwAAAAAAAAAAAACqBwAAAAAAAKsHAAAAAAAAAAAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACtBwAAAAAAAAAAAACtBwAAAAAAAK4HAAAAAAAAAAAAAK4HAAAAAAAArwcAAAAAAAAAAAAArwcAAAAAAACwBwAAAAAAAAAAAACwBwAAAAAAALEHAAAAAAAAAAAAALEHAAAAAAAAsgcAAAAAAAAAAAAAsgcAAAAAAACzBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAcAAAAAAACoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKoHAAAAAAAAqgcAAAAAAAAJAAAAdGVybWluYXRl",
					"AQAAAAAAAAABAAAAswcAAAAAAACzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKYHAAAAAAAApwcAAAAAAAAAAAAApwcAAAAAAACoBwAAAAAAAAAAAACoBwAAAAAAAKkHAAAAAAAAAAAAAKkHAAAAAAAAqgcAAAAAAAAAAAAApwcAAAAAAACnBwAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAApgcAAAAAAACmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"paste",
					null,
					"AQAAAKkHAAAAAAAA6AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQcAAAAAAACpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"unindent",
					null,
					"AQAAAKgHAAAAAAAAqAcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAYG5A"
				],
				[
					233,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKkHAAAAAAAAqQcAAAAAAAAGAAAAZGVmZXIg",
					"AQAAAAAAAAABAAAArwcAAAAAAACvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAMsHAAAAAAAAywcAAAAAAAAFAAAAZGVmZXI",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAgEJA"
				],
				[
					236,
					1,
					"right_delete",
					null,
					"AQAAAMsHAAAAAAAAywcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKcHAAAAAAAAqAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"paste",
					null,
					"AQAAAKgHAAAAAAAAuwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAcAAAAAAACoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"cut",
					null,
					"AQAAALsHAAAAAAAAuwcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					2,
					"swap_line_down",
					null,
					"BAAAAN0HAAAAAAAA8AcAAAAAAAAAAAAAqAcAAAAAAACoBwAAAAAAABMAAAAJZGVmZXIgZnJlZShzdGF0ZSkK7wcAAAAAAAACCAAAAAAAAAAAAADKBwAAAAAAAMoHAAAAAAAAEwAAAAlkZWZlciBmcmVlKHN0YXRlKQo",
					"AQAAAAAAAAABAAAAqAcAAAAAAACoBwAAAAAAAAAAAAAAAAAA"
				],
				[
					246,
					1,
					"right_delete",
					null,
					"AQAAANwHAAAAAAAA3AcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAA3AcAAAAAAADcBwAAAAAAAAAAAAAAAAAA"
				],
				[
					247,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAANwHAAAAAAAA3AcAAAAAAAAFAAAAZGVmZXI",
					"AQAAAAAAAAABAAAA3AcAAAAAAADcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"right_delete",
					null,
					"AQAAANwHAAAAAAAA3AcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3AcAAAAAAADcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"indent",
					null,
					"AQAAANwHAAAAAAAA3QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AcAAAAAAADcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAAFwYAAAAAAAAXBgAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAABcGAAAAAAAAGAYAAAAAAAAAAAAAGQYAAAAAAAAZBgAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAgEJA"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAABgGAAAAAAAAGQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAYAAAAAAAAYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"left_delete",
					null,
					"AQAAABgGAAAAAAAAGAYAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "\nquitL:"
					},
					"CAAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					2,
					"left_delete",
					null,
					"AgAAADQBAAAAAAAANAEAAAAAAAABAAAAOjMBAAAAAAAAMwEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAANQEAAAAAAAA1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AQAAADMBAAAAAAAANAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAADQBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					3,
					"left_delete",
					null,
					"AwAAADUBAAAAAAAANQEAAAAAAAABAAAAYjQBAAAAAAAANAEAAAAAAAABAAAAIDMBAAAAAAAAMwEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADMBAAAAAAAANAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " bool,"
					},
					"BgAAADQBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADcBAAAAAAAAAAAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "\tg"
					},
					"AgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "lfw."
					},
					"BAAAACgGAAAAAAAAKQYAAAAAAAAAAAAAKQYAAAAAAAAqBgAAAAAAAAAAAAAqBgAAAAAAACsGAAAAAAAAAAAAACsGAAAAAAAALAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					5,
					"left_delete",
					null,
					"BQAAACsGAAAAAAAAKwYAAAAAAAABAAAALioGAAAAAAAAKgYAAAAAAAABAAAAdykGAAAAAAAAKQYAAAAAAAABAAAAZigGAAAAAAAAKAYAAAAAAAABAAAAbCcGAAAAAAAAJwYAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "state.uoi"
					},
					"CQAAACcGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAACoGAAAAAAAAAAAAACoGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAAsBgAAAAAAAAAAAAAsBgAAAAAAAC0GAAAAAAAAAAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwYAAAAAAAAnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					3,
					"left_delete",
					null,
					"AwAAAC8GAAAAAAAALwYAAAAAAAABAAAAaS4GAAAAAAAALgYAAAAAAAABAAAAby0GAAAAAAAALQYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAMAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "quit"
					},
					"BAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAADAGAAAAAAAAMQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMGAAAAAAAANAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwYAAAAAAAAzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"paste",
					null,
					"AQAAADQGAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAABaBgAAAAAAAFsGAAAAAAAAAAAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAWQYAAAAAAABZBgAAAAAAAAEAAAAJ",
					"AQAAAAAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"cut",
					null,
					"AQAAACQGAAAAAAAAJAYAAAAAAAACAAAACQo",
					"AQAAAAAAAAABAAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAgEJA"
				],
				[
					293,
					4,
					"right_delete",
					null,
					"BQAAABMGAAAAAAAAEwYAAAAAAAABAAAAbFcGAAAAAAAAVwYAAAAAAAABAAAACRMGAAAAAAAAEwYAAAAAAAABAAAAbxMGAAAAAAAAEwYAAAAAAAABAAAAbxMGAAAAAAAAEwYAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": "update"
					},
					"BgAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkGAAAAAAAAGwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABoGAAAAAAAAGwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"left_delete",
					null,
					"AQAAABoGAAAAAAAAGgYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABkGAAAAAAAAGQYAAAAAAAABAAAAKBkGAAAAAAAAGQYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "_ve"
					},
					"AwAAABkGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					2,
					"left_delete",
					null,
					"AgAAABsGAAAAAAAAGwYAAAAAAAABAAAAZRoGAAAAAAAAGgYAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "evemts"
					},
					"BgAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABMGAAAAAAAAEwYAAAAAAAANAAAAdXBkYXRlX2V2ZW10cw",
					"AQAAAAAAAAABAAAAIAYAAAAAAAAgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "update_fl"
					},
					"CQAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAAGgYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					2,
					"left_delete",
					null,
					"AgAAABsGAAAAAAAAGwYAAAAAAAABAAAAbBoGAAAAAAAAGgYAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "glfw"
					},
					"BAAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"cut",
					null,
					"AQAAAO0HAAAAAAAA7QcAAAAAAAADAAAACX0K",
					"AQAAAAAAAAABAAAA7wcAAAAAAADvBwAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					2,
					"cut",
					null,
					"AgAAAGAGAAAAAAAAYAYAAAAAAAArAAAACWZvciAhZ2xmdy5XaW5kb3dTaG91bGRDbG9zZShzdGF0ZS53aW5kb3cpCmAGAAAAAAAAYAYAAAAAAAADAAAACXsK",
					"AQAAAAAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"unindent",
					null,
					"CwAAAGAGAAAAAAAAYAYAAAAAAAABAAAACXQGAAAAAAAAdAYAAAAAAAABAAAACacGAAAAAAAApwYAAAAAAAABAAAACcwGAAAAAAAAzAYAAAAAAAABAAAACc4GAAAAAAAAzgYAAAAAAAABAAAACe8GAAAAAAAA7wYAAAAAAAABAAAACSIHAAAAAAAAIgcAAAAAAAABAAAACUAHAAAAAAAAQAcAAAAAAAABAAAACW4HAAAAAAAAbgcAAAAAAAABAAAACaAHAAAAAAAAoAcAAAAAAAABAAAACaoHAAAAAAAAqgcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAXwYAAAAAAAC/BwAAAAAAAAAAAAAAAAAA"
				],
				[
					322,
					1,
					"cut",
					null,
					"AQAAAF8GAAAAAAAAXwYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAAAA"
				],
				[
					328,
					1,
					"cut",
					null,
					"AQAAALQHAAAAAAAAtAcAAAAAAABAAAAACWdsZncuRGVzdHJveVdpbmRvdyhzdGF0ZS53aW5kb3cpCglnbGZ3LlRlcm1pbmF0ZSgpCglmcmVlKHN0YXRlKQ",
					"AQAAAAAAAAABAAAA9AcAAAAAAAC0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "\nquit"
					},
					"BQAAALgHAAAAAAAAuQcAAAAAAAAAAAAAuQcAAAAAAAC6BwAAAAAAAAAAAAC6BwAAAAAAALsHAAAAAAAAAAAAALsHAAAAAAAAvAcAAAAAAAAAAAAAvAcAAAAAAAC9BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAcAAAAAAAC4BwAAAAAAAAAAAAAAAAAA"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " :L"
					},
					"AwAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAAC/BwAAAAAAAAAAAAC/BwAAAAAAAMAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"left_delete",
					null,
					"AQAAAL8HAAAAAAAAvwcAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAwAcAAAAAAADABwAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AQAAAL8HAAAAAAAAwAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwcAAAAAAAC/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": " poro"
					},
					"BQAAAMAHAAAAAAAAwQcAAAAAAAAAAAAAwQcAAAAAAADCBwAAAAAAAAAAAADCBwAAAAAAAMMHAAAAAAAAAAAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAcAAAAAAADABwAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					6,
					"left_delete",
					null,
					"BgAAAMQHAAAAAAAAxAcAAAAAAAABAAAAb8MHAAAAAAAAwwcAAAAAAAABAAAAcsIHAAAAAAAAwgcAAAAAAAABAAAAb8EHAAAAAAAAwQcAAAAAAAABAAAAcMAHAAAAAAAAwAcAAAAAAAABAAAAIL8HAAAAAAAAvwcAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAxQcAAAAAAADFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAL8HAAAAAAAAwAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwcAAAAAAAC/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAMAHAAAAAAAAwQcAAAAAAAAAAAAAwQcAAAAAAADCBwAAAAAAAAAAAADCBwAAAAAAAMMHAAAAAAAAAAAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAcAAAAAAADABwAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMUHAAAAAAAAxwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQcAAAAAAADFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMYHAAAAAAAAxwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"right_delete",
					null,
					"AQAAAMcHAAAAAAAAxwcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcHAAAAAAAAyAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"left_delete",
					null,
					"AQAAAMcHAAAAAAAAxwcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMcHAAAAAAAAyAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMgHAAAAAAAAygcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAADKBwAAAAAAAMsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"paste",
					null,
					"AQAAAMsHAAAAAAAACwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"unindent",
					null,
					"AQAAAMoHAAAAAAAAygcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAA4QcAAAAAAADhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"cut",
					null,
					"AQAAAJ8HAAAAAAAAnwcAAAAAAAATAAAACXVwZGF0ZSgpCglyZW5kZXIoKQ",
					"AQAAAAAAAAABAAAAsgcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"left_delete",
					null,
					"AQAAABkGAAAAAAAAGQYAAAAAAAAFAAAAX2dsZnc",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					4,
					"cut",
					null,
					"BAAAAJkHAAAAAAAAmQcAAAAAAAABAAAACpkHAAAAAAAAmQcAAAAAAAABAAAACpkHAAAAAAAAmQcAAAAAAAABAAAACpkHAAAAAAAAmQcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAmQcAAAAAAACZBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "code/ui/render.odin",
			"settings":
			{
				"buffer_size": 7488,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB2AAAAAAAAABYAAAAKLyoKVGhpcyByZW5kZXJpbmcgCiov",
					"AQAAAAAAAAABAAAAiwAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"right_delete",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nnew_uid :: proc() -> Uid\n{\n\tif state.uid == 0 do state.uid += 1\n\tstate.uid += 1 // make atomic\n\treturn state.uid\n}\n",
			"file": "code/snui/utilities.odin",
			"file_size": 135,
			"file_write_time": 133050802213133402,
			"settings":
			{
				"buffer_size": 127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nimport gl \"vendor:OpenGL\"\nimport glfw \"vendor:glfw\"\n\nUid :: u64\n\nv2 :: [2]f32\nv3 :: [3]f32\nv4 :: [4]f32\n\nv2i :: [2]i32\nv3i :: [3]i32\nv4i :: [4]i32\n\nstate: ^State\n\nState :: struct {\n\tuid: Uid,\n\twindow: glfw.WindowHandle,\n\trender: Gl,\n\tui: Ui,\n\twindow_size: v2i,\n\tmouse: Mouse,\n\tkeys: Keys,\n\tmode: Mode,\n}\n\nMode :: enum {\n\tEDIT,\n\tTYPE,\n}\n\nMouse :: struct {\n\tpos: v2i,\n\tdelta: v2i,\n\tleft: Button,\n\tright: Button,\n\tmiddle: Button,\n\tscroll: f32,\n}\n\nButton :: enum { \n\tUP,\n\tCLICK,\n\tDRAG,\n\tLOCKED,\n}\n\nKeys :: struct\n{\n\tleft: bool,\n\tright: bool,\n\tup: bool,\n\tdown: bool,\n\n\tescape: bool,\n\ttab: bool,\n\tenter: bool,\n\tspace: bool,\n\tbackspace: bool,\n\tdelete: bool,\n\n\tn_enter: bool,\n\tn_plus: bool,\n\tn_minus: bool,\n\n\tctrl: bool,\n\talt: bool,\n\tshift: bool,\n}\n\n",
			"file": "code/snui/state.odin",
			"file_size": 826,
			"file_write_time": 133050802213133402,
			"settings":
			{
				"buffer_size": 754,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAABzbnVp",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nimport \"core:fmt\"\nimport \"core:mem\"\nimport \"core:os\"\nimport gl \"vendor:OpenGL\"\nimport glfw \"vendor:glfw\"\n\n/*\nThis rendering \n*/\n\nGl :: struct\n{\n\tshader: u32,\n\tfont_texture: u32,\n\tfont_texture_size: i32,\n\n\tvertices: []f32,\n\tvertex_buffer: u32,\n\tvertex_index: int,\n\n\tindices: []u32,\n\tindex_buffer: u32,\n\tindex_index: int,\n\tquad_index: int,\n}\n\nQuad :: struct\n{\n\tl: f32,\n\tt: f32,\n\tr: f32,\n\tb: f32,\n}\n\nopengl_init :: proc()\n{\n\tgl.load_up_to(3, 3, glfw.gl_set_proc_address)\n\tgl.Enable(gl.BLEND)\n\tgl.Enable(gl.SCISSOR_TEST)\n\tgl.BlendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n\tgl.GenBuffers(1, &state.render.vertex_buffer)\n\tstate.render.vertices = make_slice([]f32, mem.Megabyte * 2)\n\tgl.GenBuffers(1, &state.render.index_buffer)\n\tstate.render.indices = make([]u32, mem.Megabyte * 2)\n\n\tshader_success : bool\n\tstate.render.shader, shader_success = gl.load_shaders_source(UIMAIN_VS, UIMAIN_FRAG)\n\tif !shader_success do fmt.println(\"UI shader did not compile!\")\n\n\tgl.GenTextures(1, &state.render.font_texture)\n\tgl.BindTexture(gl.TEXTURE_2D, state.render.font_texture)\n\tgl.GenerateMipmap(gl.TEXTURE_2D)\n\n\tstate.render.font_texture_size = 512 // size of font bitmap\n}\n\nopengl_load_texture :: proc(texture: u32, image: rawptr, size:i32) -> bool\n{\n\tgl.BindTexture(gl.TEXTURE_2D, texture)\n  \tgl.TexImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, size,size, 0, gl.ALPHA, gl.UNSIGNED_BYTE, image)\n  \tgl.TexParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n  \tif gl.GetError() != 0 do return false\n  \treturn true\n}\n\nrender :: proc()\n{\n\tgl.BindFramebuffer(gl.FRAMEBUFFER, 0)\n\tgl.ClearColor(0, 0, 0, 1)\n\tgl.Viewport(0, 0, i32(state.window_size.x), i32(state.window_size.y))\n\tgl.Scissor(0, 0, i32(state.window_size.x), i32(state.window_size.y))\n\tgl.Clear(gl.COLOR_BUFFER_BIT)\n\n\tgl.UseProgram(state.render.shader)\n\n\tgl.BindBuffer(gl.ARRAY_BUFFER, state.render.vertex_buffer)\n\tgl.BufferData(gl.ARRAY_BUFFER, state.render.vertex_index * size_of(f32), &state.render.vertices[0], gl.STATIC_DRAW)\n\t\n\tgl.VertexAttribPointer(0, 3, gl.FLOAT, gl.FALSE, 10 * size_of(f32), 0 * size_of(f32))\n\tgl.EnableVertexAttribArray(0)\n\tgl.VertexAttribPointer(1, 2, gl.FLOAT, gl.FALSE, 10 * size_of(f32), 3 * size_of(f32))\n\tgl.EnableVertexAttribArray(1)\n\tgl.VertexAttribPointer(2, 4, gl.FLOAT, gl.FALSE, 10 * size_of(f32), 5 * size_of(f32))\n\tgl.EnableVertexAttribArray(2)\n\tgl.VertexAttribPointer(3, 1, gl.FLOAT, gl.FALSE, 10 * size_of(f32), 9 * size_of(f32))\n\tgl.EnableVertexAttribArray(3)\n\n\twindow_res := gl.GetUniformLocation(state.render.shader, \"window_res\")\n\tgl.Uniform2f(window_res, f32(state.window_size.x)/2, f32(state.window_size.y)/2)\n\n\tgl.BindBuffer(gl.ELEMENT_ARRAY_BUFFER, state.render.index_buffer)\n\tgl.BufferData(gl.ELEMENT_ARRAY_BUFFER, state.render.index_index * size_of(u32), &state.render.indices[0], gl.STATIC_DRAW)\n\n\tgl.DrawElements(gl.TRIANGLES, i32(state.render.index_index), gl.UNSIGNED_INT, nil)\n\tglfw.SwapBuffers(state.window)\n\n\tstate.render.vertex_index = 0\n\tstate.render.index_index = 0\n\tstate.render.quad_index = 0\n}\n\n\npush_quad :: \tproc(quad:Quad,\tcA:v4={1,1,1,1}, cB:v4={1,1,1,1}, cC:v4={1,1,1,1}, cD:v4={1,1,1,1},\tborder: f32=0.0, uv:Quad={0,0,0,0},\tmix:f32=0)\n{\n\tvertex_arrays: [4][40]f32\n\n\tif border == 0\n\t{\n\t\tvertex_arrays[0]  = { \n\t\t\t\tquad.l,quad.t,0,\tuv.l,uv.t,\tcA[0],cA[1],cA[2],cA[3],\tmix,\n\t\t\t\tquad.r,quad.t,0,\tuv.r,uv.t,\tcB[0],cB[1],cB[2],cB[3],\tmix,\n\t\t\t\tquad.r,quad.b,0,\tuv.r,uv.b,\tcD[0],cD[1],cD[2],cD[3],\tmix,\n\t\t\t\tquad.l,quad.b,0,\tuv.l,uv.b,\tcC[0],cC[1],cC[2],cC[3],\tmix,\n\t\t}\n\t} else {\n\n\t\tinner: Quad = {quad.l + border,quad.t + border,quad.r - border,quad.b - border,}\n\n\t\tvertex_arrays = {\n\t\t\t{ quad.l,quad.t,0, 0,0, cA[0],cA[1],cA[2],cA[3], 0,\tquad.r,quad.t,0, 0,0, cB[0],cB[1],cB[2],cB[3], 0,\tinner.r,inner.t,0, 0,0, cB[0],cB[1],cB[2],cB[3], 0,\tinner.l,inner.t,0, 0,0, cA[0],cA[1],cA[2],cA[3], mix},\n\t\t\t{ quad.r,quad.t,0, 0,0, cB[0],cB[1],cB[2],cB[3], 0,\tquad.r,quad.b,0, 0,0, cD[0],cD[1],cD[2],cD[3], 0,\tinner.r,inner.b,0, 0,0, cD[0],cD[1],cD[2],cD[3], 0,\tinner.r,inner.t,0, 0,0, cB[0],cB[1],cB[2],cB[3], mix},\n\t\t\t{ quad.r,quad.b,0, 0,0, cD[0],cD[1],cD[2],cD[3], 0,\tquad.l,quad.b,0, 0,0, cC[0],cC[1],cC[2],cC[3], 0,\tinner.l,inner.b,0, 0,0, cC[0],cC[1],cC[2],cC[3], 0,\tinner.r,inner.b,0, 0,0, cD[0],cD[1],cD[2],cD[3], mix},\n\t\t\t{ quad.l,quad.b,0, 0,0, cC[0],cC[1],cC[2],cC[3], 0,\tquad.l,quad.t,0, 0,0, cA[0],cA[1],cA[2],cA[3], 0,\tinner.l,inner.t,0, 0,0, cA[0],cA[1],cA[2],cA[3], 0,\tinner.l,inner.b,0, 0,0, cC[0],cC[1],cC[2],cC[3], mix},\n\t\t}\n\t}\n\t\t\n\tfor vertex_array, i in &vertex_arrays\n\t{\n\t\tif border == 0 && i > 0 do break\n\n\t\tquad_index := u32(state.render.quad_index * 4)\n\t\tindices :[6]u32 = {0+quad_index, 1+quad_index, 3+quad_index, 1+quad_index, 2+quad_index, 3+quad_index}\n\t\t\n\t\tcopy(state.render.vertices[state.render.vertex_index:state.render.vertex_index+40], vertex_array[:])\n\t\tstate.render.vertex_index += 40\n\t\t\n\t\tcopy(state.render.indices[state.render.index_index:state.render.index_index+6], indices[:])\n\t\tstate.render.index_index += 6\n\t\tstate.render.quad_index += 1\n\t}\n}\n\npush_quad_solid :: proc(quad: Quad, color:v4)\n{\n\tpush_quad(quad,\tcolor, color, color, color, 0, {0,0,0,0}, 0)\n}\n\npush_quad_gradient_h :: proc(quad: Quad, color_left:v4, color_right:v4)\n{\n\tpush_quad(quad,\tcolor_left, color_right, color_left, color_right, 0, {0,0,0,0}, 0)\n}\n\npush_quad_gradient_v :: proc(quad: Quad, color_top:v4, color_bottom:v4)\n{\n\tpush_quad(quad,\tcolor_top, color_top, color_bottom, color_bottom, 0, {0,0,0,0}, 0)\n}\n\npush_quad_border :: proc(quad: Quad, color:v4, border: f32=2)\n{\n\tpush_quad(quad,\tcolor, color, color, color, border, {0,0,0,0}, 0)\n}\n\npush_quad_font :: proc(quad: Quad, color:v4, uv:Quad)\n{\n\tpush_quad(quad,\tcolor, color, color, color, 0, uv, 1)\n}\n\npt_in_quad \t:: proc(pt: v2, quad: Quad) -> bool\n{\n\tresult := false;\n\tif pt.x > quad.l && pt.y > quad.t && pt.x < quad.r && pt.y < quad.b do result = true;\n\treturn result;\n}\n\nquad_in_quad\t:: proc(quad_a, quad_b: Quad) -> bool\n{\n\tresult := false\n\tif pt_in_quad({quad_a.l,quad_a.t}, quad_b) || pt_in_quad({quad_a.r, quad_a.b}, quad_b) do result = true\n\treturn result\n}\n\nquad_full_in_quad\t:: proc(quad_a, quad_b: Quad) -> bool\n{\n\tresult := false\n\tif pt_in_quad({quad_a.l, quad_a.t}, quad_b) && pt_in_quad({quad_a.r, quad_a.b}, quad_b) do result = true\n\treturn result\n}\n\nquad_clamp_to_quad :: proc (quad, quad_b: Quad) -> Quad\n{\n\tresult: Quad = quad\n\tresult.l = clamp(quad.l, quad_b.l, quad_b.r)\n\tresult.t = clamp(quad.t, quad_b.t, quad_b.b)\n\tresult.r = clamp(quad.r, quad_b.l, quad_b.r)\n\tresult.b = clamp(quad.b, quad_b.t, quad_b.b)\n\treturn result\n}\n\n// SHADER\n\nUIMAIN_VS ::\n`\n#version 330 core\nlayout(location = 0) in vec3 pos;\nlayout(location = 1) in vec2 uv;\nlayout(location = 2) in vec4 color;\nlayout(location = 3) in float mix_texture;\n\nuniform vec2 window_res;\n\nout vec4 vertex_color;\nout vec2 uv_coords;\nout float texture_mix;\n\nvoid main()\n{\n\tuv_coords = uv;\n\tvertex_color = color;\n\ttexture_mix = mix_texture;\n\tgl_Position.xyzw = vec4((pos.x-window_res.x)/window_res.x, (pos.y - window_res.y)/(-window_res.y), pos.z, 1);\n}\n`\n\nUIMAIN_FRAG ::\n`\n#version 330 core\nin vec4 vertex_color;\nin vec2 uv_coords;\nin float texture_mix;\n\nout vec4 FragColor;\n\nuniform sampler2D tex;\n\nvoid main()\n{\n\tvec4 Mul = vec4((vertex_color.xyz * vertex_color.aaa), vertex_color.a);\n\n\t// vec4 texs = texture(tex, uv_coords);\n\t// FragColor = vec4((vertex_color.rgb * texture_mix) + texs.rgb, texs.a);\n\n\tif (texture_mix == 0)\n\t{\n\t\tFragColor = vertex_color;\n\t} else {\n\t\tvec4 texs = texture(tex, uv_coords);\n\t\tFragColor = vec4(vertex_color.rgb, texs.a);\n\t}\n}\n`",
			"file": "code/snui/render.odin",
			"file_size": 7763,
			"file_write_time": 133050802213138398,
			"settings":
			{
				"buffer_size": 7511,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAABzbnVp",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nimport \"core:fmt\"\nimport \"core:mem\"\n\n//- NOTE Simple Pool allocator \n// TODO make this growable...\nNode :: struct\n{\n\tnext: ^Node,\n}\n\nPool :: struct\n{\n\tmemory: []byte,\n\tchunk_size: int,\n\tchunk_count: int,\n\toriginal_size: int,\n\thead: ^Node,\n}\n\npool_init :: proc(pool: ^Pool, size: int, count: int)\n{\n\tpool.chunk_size = size\t\t\t\t\t\t\t\t// set chunk_size\n\tpool.chunk_count = count\t\t\t\t\t\t\t// set count\n\tpool.original_size = size\n\tok: any\n\tpool.memory, ok = mem.alloc_bytes(size * count) \t// allocated the total bytes\n\tpool.head = nil\t\t\t\t\t\t\t\t\t\t// sets the head to null\n\tpool_free_all(pool)\n}\n\npool_free_all :: proc(pool: ^Pool)\n{\n\tmem.zero(&pool.memory[0], pool.chunk_count * pool.chunk_size)\n\n\tfor chunk in 0..<pool.chunk_count\t\t\t\t// loop through number of chunks\n\t{\n\t\tptr := &pool.memory[chunk * pool.chunk_size]\t// get pointer to the Chunk memory\n\t\tnode: ^Node = cast(^Node)ptr\t\t\t// create  cast the pointer we just created to a Node object,\n\t\tnode.next = pool.head\t\t\t\t\t\t// Set the Node's \"next\" value to the current pool's \"head\" (^Node)\n\t\tpool.head = node\t\t\t\t\t\t\t// set the pool's \"head\" to the current Node\n\t}\n}\n\npool_alloc :: proc(pool: ^Pool) -> rawptr\n{\n\tnew_alloc := pool.head\n\tif new_alloc != nil\n\t{\n\t\tpool.head = pool.head.next\n\t\tmem.zero(new_alloc, pool.chunk_size)\n\t\t\n\t\treturn new_alloc\n\t}\n\treturn nil\n}\n\n// pool_grow :: proc(pool: ^Pool) -> bool\n// {\n// \t// TODO implement\n// }\n\npool_free :: proc(pool: ^Pool, ptr: rawptr) -> bool\n{\n\tnode : ^Node\n\t\n\tstart := &pool.memory\n\tlength := (pool.chunk_size * pool.chunk_count) - 1\n\tend := &pool.memory[length]\n\t\n\tif ptr == nil do return false\n\tif !(start <= ptr && ptr < end) do return false\n\t\n\t// Push free Node\n\tnode = cast(^Node)ptr\n\tnode.next = pool.head\n\tpool.head = node\n\treturn true\n}\n\npool_delete :: proc(pool: ^Pool)\n{\n\tfree(&pool.memory[0])\n}",
			"file": "code/snui/memory.odin",
			"file_size": 1894,
			"file_write_time": 133050802213143408,
			"settings":
			{
				"buffer_size": 1810,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nimport \"core:fmt\"\n\nui_update :: proc()\n{\n\tquad : Quad = {\n\t\tf32(state.mouse.pos.x),\n\t\tf32(state.mouse.pos.y),\n\t\tf32(state.mouse.pos.x)+400,\n\t\tf32(state.mouse.pos.y)+(state.ui.line_space * 5),\n\t}\n\tcolor: v4 ={0,1,0,1}\n\n\tif state.mouse.left == .CLICK do color = state.ui.col.active\n\tif state.mouse.right == .CLICK do color = state.ui.col.hot\n\tif state.mouse.middle == .CLICK do color = state.ui.col.base\n\n\tpush_quad_border(quad, color, 1)\n\n\n\n\tui_calc_panel(state.ui.panel_master, {0, 0, f32(state.window_size.x), f32(state.window_size.y)})\n\n}\n\n",
			"file": "code/snui/update.odin",
			"file_size": 577,
			"file_write_time": 133050802213143408,
			"settings":
			{
				"buffer_size": 554,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAABzbnVp",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "ui_"
					},
					"AwAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "code/ui/update.odin",
			"settings":
			{
				"buffer_size": 551,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "package ui\n\nimport stb \"vendor:stb/truetype\"\nimport \"core:mem\"\nimport \"core:fmt\"\nimport \"core:os\"\nimport \"core:math\"\n\nUi :: struct {\n\tpanels: map[Uid]^Panel,\n\tpanel_pool: Pool,\n\tpanel_master: Uid,\n\tpanel_active: Uid,\n\n\tcol: Ui_Colors,\n\n\t// FONT INFO\n\tchar_data: map[rune]Char_Data,\n\tfont_size: f32,\t\t\t// NOTE pixels tall\n\tfont_size_large: f32,   // TODO not implemented yet\n \tfont_size_small: f32,\t//\n\tfont_v_center_offset: f32,\n\tmargin: f32,\n\tline_space: f32,\n}\n\nUi_Colors :: struct {\n\tbg: v4,\n\tfont: v4,\n\thighlight: v4,\n\tbase: v4,\n\thot: v4,\n\tactive: v4,\t\n}\n\nui_init :: proc()\n{\n\tui_init_font()\n\n\tpool_init(&state.ui.panel_pool, size_of(Panel), MAX_PANELS)\n\tstate.ui.panel_master = ui_create_panel(0)\n\tsub_panel := ui_create_panel(state.ui.panel_master, .VERTICAL, 0.05)\n\tui_create_panel(sub_panel,.HORIZONTAL, 0.7)\n}\n\n// FONT|TEXT //\n\nChar_Data :: struct\n{\n\toffset: v2,\n\twidth: f32,\n\theight: f32,\n\tadvance: f32,\n\tuv: Quad,\n}\n\nText_Align :: enum {\n\tLEFT,\n\tCENTER,\n\tRIGHT,\n}\n\nui_init_font :: proc() {\n\tui_set_font_size()\n\tfmt.println(\"set font size...\")\n\t\n\tstate.ui.col.bg = {0.1, 0.1, 0.1, 1}\n\tstate.ui.col.font = {1,1,1,1}\n\tstate.ui.col.base = {0.1, 0.1, 0.1, 1}\n\tstate.ui.col.highlight = {0.0, 0.2, 1, 1}\n\tstate.ui.col.hot = {1.0,0.5,0.2,1}\n\tstate.ui.col.active = {0.8,0.3,0.2,1}\n}\n\nui_set_font_size :: proc(size:f32=20)\n{\n\tstate.ui.font_size = size\n\tstate.ui.font_size_small = state.ui.font_size * .75\n\tstate.ui.font_size_large = state.ui.font_size * 1.25\n\t\n\tui_load_font(\"Roboto-Regular\", state.ui.font_size, state.render.font_texture)\n\n\tletter_data := state.ui.char_data['W']\n\tstate.ui.font_v_center_offset = math.round((state.ui.font_size - letter_data.height) * 0.5)\n\tstate.ui.margin = 4\n\tstate.ui.line_space = state.ui.font_size + (state.ui.margin * 2) // state.ui.margin * 2 + state.ui.font_size\n}\n\nui_load_font :: proc(name: string, font_size: f32, texture: u32)\n{\n\tusing stb, mem, fmt\n\tNUM_CHARS :: 96\n\t\n\tdata, data_ok := os.read_entire_file(fmt.tprintf(\"fonts/%v.ttf\", name))\n\tdefer delete(data)\n\tif !data_ok do fmt.println(\"failed to load font file\")\n\n\timage:= alloc(int(state.render.font_texture_size * state.render.font_texture_size))\n\tdefer free(image)\n\n\tstb_char_data, char_data_ok:= make([]bakedchar, NUM_CHARS)\n\tdefer delete(stb_char_data)\n\n\tBakeFontBitmap(raw_data(data), 0, font_size, cast([^]u8)image, state.render.font_texture_size, state.render.font_texture_size, 32, NUM_CHARS, raw_data(stb_char_data))\n\n\tfor b, i in stb_char_data\n\t{\n\t\tpixel_divider := 1.0 / f32(state.render.font_texture_size)\n\n\t\tchar_data: Char_Data\n\t\t\n\t\tchar_data.offset = {f32(b.xoff), f32(b.yoff + state.ui.font_size)}\n\t\tchar_data.width = f32(b.x1 - b.x0)\n\t\tchar_data.height = f32(b.y1 - b.y0)\n\t\tchar_data.advance = b.xadvance\n\n\t\tchar_data.uv.l = f32(b.x0) * pixel_divider\n\t\tchar_data.uv.t = f32(b.y0) * pixel_divider\n\t\tchar_data.uv.r = f32(b.x1) * pixel_divider\n\t\tchar_data.uv.b = f32(b.y1) * pixel_divider\n\n\t\tstate.ui.char_data[rune(i + 32)] = char_data\n\t}\n\n\tif opengl_load_texture(texture, image, state.render.font_texture_size) do fmt.println(fmt.tprintf(\"Font loaded: %v\", name))\n}\n\ndraw_text_multiline :: proc(text:string, quad:Quad, align:Text_Align=.LEFT, kerning:f32=-2)\n{\n\tmax := (quad.b - quad.t) / state.ui.line_space\n\tstart, end: int \n\tletter_index: int\n\tline_index: int\n\tfor letter_index < len(text)\n\t{\n\t\tif f32(line_index) > max do break\n\t\tjump := f32(line_index) * (state.ui.line_space - (state.ui.margin*2) + kerning) \n\t\tletter := text[letter_index]\n\t\tif letter == '\\n' || letter_index == len(text)-1 {\n\t\t\tend = letter_index\n\t\t\tif letter != '\\n' do end += 1\n\t\t\tdraw_text(text[start:end], {quad.l, quad.t + jump, quad.r, quad.t + jump + state.ui.line_space}, align, state.ui.col.font)\n\t\t\tstart = end\n\t\t\tline_index += 1\n\t\t}\n\t\tletter_index += 1\n\t}\n}\n\ndraw_text :: proc(text: string, quad: Quad, align: Text_Align = .LEFT, color: v4 = {1,1,1,1} )\n{\n\tusing stb\n\n\tleft_align: f32 = quad.l\n\ttop_align: f32 = quad.t - state.ui.font_v_center_offset + state.ui.margin\n\ttext_height: f32 = state.ui.font_size\n\ttext_width: f32\n\n\tif align != .LEFT\n\t{\n\t\tfor letter in text do text_width += state.ui.char_data[letter].advance\n\n\t\tif align == .CENTER {\n\t\t\tleft_align -= text_width / 2\n\t\t} else if align == .RIGHT {\n\t\t\tleft_align -= text_width + state.ui.font_v_center_offset + state.ui.margin\n\t\t}\n\t} else {\n\t\tleft_align += state.ui.font_v_center_offset + state.ui.margin\n\t}\n\n\ttop_left : v2 = { left_align, top_align }\n\n\tfor letter, i in text\n\t{\n\t\tletter_data : Char_Data = state.ui.char_data[letter]\n\t\tif letter != ' '\n\t\t{\n\t\t\tchar_quad : Quad\n\t\t\tchar_quad.l = top_left.x + letter_data.offset.x\n\t\t\tchar_quad.t = top_left.y + letter_data.offset.y\n\t\t\tchar_quad.r = char_quad.l + letter_data.width\n\t\t\tchar_quad.b = char_quad.t + letter_data.height\n\t\t\tpush_quad_font(char_quad, color, state.ui.char_data[letter].uv)\n\t\t}\n\t\ttop_left.x += letter_data.advance\n\t}\n}",
			"file": "code/snui/ui.odin",
			"file_size": 5039,
			"file_write_time": 133050802213153417,
			"settings":
			{
				"buffer_size": 4852,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"paste",
					null,
					"AgAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAABzbnVp",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "package ui\n\nimport \"core:fmt\"\n\nMAX_PANELS :: 40\nPANEL_MARGIN :: 2\n\nPanel :: struct {\n\tuid: Uid,\n\tctx: Quad,\n\tparent: Uid,\n\tchildren: [2]Uid,\n\tdirection: Panel_Direction,\n\tsize: f32,\n\ttype: Panel_Type,\n}\n\nPanel_Direction :: enum {\n\tHORIZONTAL,\n\tVERTICAL,\n}\n\nPanel_Type :: enum {\n\tDEBUG,\n\tTEMP,\n}\n\nui_create_panel :: proc(active_panel_uid: Uid, direction:Panel_Direction=.HORIZONTAL, size:f32=0.5) -> Uid\n{\n\tactive_panel, active_panel_ok := state.ui.panels[active_panel_uid]\n\tif active_panel_ok {\n\t\tnew_parent := cast(^Panel)pool_alloc(&state.ui.panel_pool)\n\t\tnew_parent.uid = new_uid()\n\t\tnew_parent.size = size\n\t\tnew_parent.children[0] = active_panel.uid\n\t\tnew_parent.parent = active_panel.parent\n\t\tnew_parent.direction = direction\n\t\tstate.ui.panels[new_parent.uid] = new_parent\n\n\t\tactive_panel.parent = new_parent.uid\n\t\tactive_panel.children = {0,0}\n\t\tactive_panel.size = 0.5 \n\n\t\tpanel := cast(^Panel)pool_alloc(&state.ui.panel_pool)\n\t\tpanel.uid = new_uid()\n\t\tpanel.size = 0.5\n\t\tpanel.parent = new_parent.uid\n\t\tpanel.direction = direction\n\t\tstate.ui.panels[panel.uid] = panel\n\n\t\tnew_parent.children[1] = panel.uid\n\n\t\tif active_panel_uid == state.ui.panel_master {\n\t\t\tstate.ui.panel_master = new_parent.uid\n\t\t}\n\n\t\tgrandpa, grandpa_ok:= state.ui.panels[new_parent.parent]\n\t\tif grandpa_ok {\n\t\t\tif grandpa.children[0] == active_panel_uid {\n\t\t\t\tgrandpa.children[0] = new_parent.uid\n\t\t\t} else {\n\t\t\t\tgrandpa.children[1] = new_parent.uid\n\t\t\t}\n\t\t}\n\n\t\treturn panel.uid\n\t} else {\n\t\tif active_panel_uid == 0 {\n\t\t\tpanel := cast(^Panel)pool_alloc(&state.ui.panel_pool)\n\t\t\tpanel.uid = new_uid()\n\t\t\tpanel.size = 0.5\n\t\t\tpanel.parent = 0\n\t\t\tpanel.direction = direction\n\t\t\tstate.ui.panels[panel.uid] = panel\n\t\t\treturn panel.uid\n\t\t}\n\t}\n\treturn 0\n}\n\nui_calc_panel :: proc(uid: Uid, ctx: Quad)\n{\n\tpanel, ok := state.ui.panels[uid]\n\tif ok\n\t{\n\t\tfmt.println(\"Calcing \", uid, panel)\n\t\tpanel.ctx = ctx\n\n\t\tchild_a, cok := state.ui.panels[panel.children[0]]\n\t\tfmt.println(cok)\n\t\tif cok\n\t\t{\n\t\t\ta: Quad\n\t\t\tb: Quad\n\t\t\tbar: Quad\n\t\t\tsize_w: f32 = (ctx.r - ctx.l) * panel.size\n\t\t\tsize_h: f32 = (ctx.b - ctx.t) * panel.size\n\t\t\tif panel.direction == .HORIZONTAL\n\t\t\t{\n\t\t\t\ta = { ctx.l, ctx.t, ctx.l + size_w - PANEL_MARGIN, ctx.b }\n\t\t\t\tb = { ctx.l + size_w + PANEL_MARGIN, a.t, ctx.r, ctx.b }\n\t\t\t\tbar = {ctx.l + size_w - PANEL_MARGIN, ctx.t, ctx.l + size_w + PANEL_MARGIN, ctx.b}\n\t\t\t} else {\t\t\t\t  // plus key\n\t\t\t\ta\t= { ctx.l, ctx.t, ctx.r, ctx.t + size_h - PANEL_MARGIN }\n\t\t\t\tb\t= { ctx.l, ctx.t + size_h + PANEL_MARGIN, ctx.r, ctx.b }\n\t\t\t\tbar = { ctx.l, ctx.t + size_h - PANEL_MARGIN, ctx.r, ctx.t + size_h + PANEL_MARGIN}\n\t\t\t}\n\t\t\tcolor := state.ui.col.base\n\t\t\tif pt_in_quad({f32(state.mouse.pos.x), f32(state.mouse.pos.y)}, bar) {\n\t\t\t\tif state.mouse.left == .CLICK {\n\t\t\t\t\tstate.ui.panel_active = panel.uid\n\t\t\t\t}\n\n\t\t\t\tcolor = state.ui.col.highlight\n\t\t\t\tdraw_text(fmt.tprintf(\"BORDER ID: %v\", panel.uid), ctx, .LEFT, state.ui.col.highlight)\n\t\t\t}\n\t\t\tif state.mouse.left == .UP {\n\t\t\t\tstate.ui.panel_active = 0\n\t\t\t}\n\t\t\tif state.ui.panel_active == panel.uid {\n\t\t\t\tif panel.direction == .HORIZONTAL {\n\t\t\t\t\tpanel.size = (f32(state.mouse.pos.x) - ctx.l) * (1 / (ctx.r - ctx.l))\n\t\t\t\t} else {\n\t\t\t\t\tpanel.size = (f32(state.mouse.pos.y) - ctx.t) * (1 / (ctx.b - ctx.t))\n\t\t\t\t}\n\t\t\t}\n\t\t\tpush_quad_solid(bar, color)\n\t\t\tui_calc_panel(panel.children[0], a)\n\t\t\tui_calc_panel(panel.children[1], b)\n\t\t} else {\n\t\t\tquad: Quad\n\n\t\t\tparent, parent_ok := state.ui.panels[panel.parent]\n\n\t\t\tcolor :v4= {0.5,0.5,0.5,1}\n\t\t\tif pt_in_quad({f32(state.mouse.pos.x), f32(state.mouse.pos.y)}, ctx)\n\t\t\t{\n\t\t\t\tcolor = state.ui.col.hot\n\t\t\t\tdraw_text(fmt.tprintf(\"Panel ID: %v\", panel.uid), ctx)\n\t\t\t}\n\t\t\tpush_quad_border(ctx, color, 2)\n\n\t\t\tui_draw_panel(panel.uid, ctx)\n\t\t}\n\t}\n}\n\nui_draw_panel :: proc(panel_uid: Uid, ctx: Quad)\n{\n\tif state.ui.panels[panel_uid].type == .DEBUG do ui_panel_debug(ctx)\n}\n\nui_panel_debug :: proc(ctx: Quad)\n{\n\t// NOTE DEBUG\n\tdebug_quad:= ctx\n\tdraw_text(\"DEBUG:\", debug_quad)\n\tdebug_quad.t += state.ui.line_space\n\tdebug_quad.b += state.ui.line_space\n\tdraw_text(fmt.tprintf(\"Mouse Pos: %v\", state.mouse.pos), debug_quad)\n\tdebug_quad.t += state.ui.line_space\n\tdebug_quad.b += state.ui.line_space\n\tfor p in state.ui.panels {\n\t\tdraw_text(fmt.tprintf(\"%v\", state.ui.panels[p]), debug_quad)\n\t\tdebug_quad.t += state.ui.line_space\n\t\tdebug_quad.b += state.ui.line_space\n\t}\n\tdraw_text(fmt.tprintf(\"%v\", state.ui.panel_master), debug_quad)\n\tdebug_quad.t += state.ui.line_space\n\tdebug_quad.b += state.ui.line_space\n}",
			"file": "code/snui/ui_panel.odin",
			"file_size": 4622,
			"file_write_time": 133050802213153417,
			"settings":
			{
				"buffer_size": 4452,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAQAAABzbnVp",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJAAAAAAAAAAQAAABtYWluCQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/Odin-Build-Run.sublime-build",
					""
				],
				[
					"Packages/User/Odin-Build.sublime-build",
					""
				]
			],
			[
				"Packages/User/Odin-Build-Run.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sync se",
				"Sync Settings: Edit User Settings"
			],
			[
				"sync settings",
				"Sync Settings: Upload"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"comman",
				"Preferences: Terminus Command Palette"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 480.0,
		"history":
		[
			"Build With:",
			"Build With",
			"cd",
			"dir",
			"cmd",
			"dir",
			"cls",
			"clear",
			"python",
			"os.getevn(\"PATH\")",
			"clear",
			"exit",
			"cd"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/X/dev/SniffUI",
		"/X/dev/SniffUI/build",
		"/X/dev/SniffUI/code",
		"/X/dev/SniffUI/code/ui"
	],
	"file_history":
	[
		"/X/dev/SniffUI/code/snui/memory.odin",
		"/X/dev/SniffUI/code/snui/utilities.odin",
		"/G/.shortcut-targets-by-id/1YCYKVG-MStz5CjYeb_fH988Tsx1iVxAb/VisibleMR MAIN/Clients/Harris Poll/3M/2022 Reputation Scorecards/3M Monthly Reputation Automation/July 2022/data_trends_3M_July2022_reformatted.csv",
		"/G/.shortcut-targets-by-id/1YCYKVG-MStz5CjYeb_fH988Tsx1iVxAb/VisibleMR MAIN/Clients/Harris Poll/3M/2022 Reputation Scorecards/3M US OL Biweekly Automation/_dev/automator_special.py",
		"/G/.shortcut-targets-by-id/1YCYKVG-MStz5CjYeb_fH988Tsx1iVxAb/VisibleMR MAIN/Clients/Harris Poll/3M/2022 Reputation Scorecards/3M Monthly Reputation Automation/June 2022/data_trends_3M_June2022_reformatted.csv",
		"/G/.shortcut-targets-by-id/1YCYKVG-MStz5CjYeb_fH988Tsx1iVxAb/VisibleMR MAIN/Clients/Harris Poll/3M/2022 Reputation Scorecards/3M Monthly Reputation Automation/July 2022/data_trends_3M_July2022_reformatted2.csv",
		"/C/Users/marxn/AppData/Roaming/Sublime Text/Packages/User/SyncSettings.sublime-settings",
		"/C/Users/marxn/AppData/Roaming/Sublime Text/Packages/Default/Preferences.sublime-settings",
		"/X/dev/caspar-control-odin/build/build.sh",
		"/X/dev/caspar-control-odin/code/cc/opengl.odin",
		"/X/dev/caspar-control-odin/code/cc/ui.odin",
		"/X/dev/caspar-control-odin/code/cc/stb-font.odin",
		"/X/dev/caspar-control-odin/build/obj/font.obj",
		"/X/dev/caspar-control-odin/build/build-run.bat",
		"/X/dev/caspar-control-odin/code/cc/types.odin",
		"/X/dev/caspar-control-odin/code/cc/retro-font.odin",
		"/X/dev/caspar-control-odin/code/cc/shaders.odin",
		"/X/dev/caspar-control-odin/build/build.bat",
		"/X/dev/caspar-control-odin/code/caspar-client.odin",
		"/X/dev/caspar-control-odin/code/cc/font.odin",
		"/X/dev/caspar-control-odin/code/cc/stb.odin",
		"/X/dev/caspar-control-odin/code/cc/cc.odin",
		"/X/dev/caspar-control-odin/code/cc/UIPanels.odin",
		"/E/dev/odin/caspar-control-odin/code/cc/util.odin",
		"/E/dev/odin/caspar-control-odin/code/cc/ui.odin",
		"/E/dev/odin/caspar-control-odin/code/cc/cc.odin",
		"/E/dev/odin/caspar-control-odin/code/external/ttf2mesh/ttf2mesh.odin",
		"/E/dev/odin/caspar-control-odin/code/cc/UIPanels.odin",
		"/E/dev/odin/caspar-control-odin/code/cc/shaders.odin",
		"/E/dev/odin/caspar-control-odin/caspar-control-odin.sublime-project",
		"/C/Users/mark/AppData/Roaming/Sublime Text/Packages/User/Odin-Build-Run.sublime-build",
		"/C/Users/mark/AppData/Roaming/Sublime Text/Packages/User/Odin-Build.sublime-build",
		"/E/dev/odin/caspar-control-odin/build/setup.bat",
		"/E/dev/odin/caspar-control-odin/build/build.bat",
		"/E/dev/odin/caspar-control-odin/build/build-run.bat",
		"/C/Users/mark/AppData/Roaming/Sublime Text/Packages/User/Caspar-Client-Odin.sublime-project",
		"/C/Users/mark/AppData/Roaming/Sublime Text/Packages/Package Control/Package Control.sublime-settings",
		"/G/My Drive/VisibleMR MAIN/Clients/Harris Poll/3M/2022 Reputation Scorecards/Python/Banner-Nov-2021.csv",
		"/E/Nextcloud/dev/odin/Odin/core/os/os_windows.odin",
		"/E/Nextcloud/dev/odin/Odin/core/sys/win32/general.odin",
		"/E/Nextcloud/dev/odin/Odin/core/sys/windows/kernel32.odin",
		"/E/Nextcloud/dev/odin/Odin/core/sys/win32/kernel32.odin",
		"/E/Nextcloud/dev/odin/Odin/core/os/file_windows.odin",
		"/C/Users/mark/Desktop/charty.pptx",
		"/E/Nextcloud/dev/odin/Odin/core/os/stat_windows.odin",
		"/E/Nextcloud/dev/odin/Odin/core/slice/slice.odin",
		"/E/Nextcloud/dev/odin/Odin/core/os/dir_windows.odin",
		"/E/Nextcloud/dev/odin/Odin/core/sys/windows/types.odin"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 163.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"snui"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ui"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "code/main.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 165,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "code/ui/state.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4826,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1561
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1860.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "code/ui/render.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7488,
						"regions":
						{
						},
						"selection":
						[
							[
								5158,
								5158
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1980.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "code/snui/utilities.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 127,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "code/snui/state.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 754,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "code/snui/render.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7511,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "code/snui/memory.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1810,
						"regions":
						{
						},
						"selection":
						[
							[
								127,
								141
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "code/snui/update.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 554,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "code/ui/update.odin",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 551,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "code/snui/ui.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4852,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "code/snui/ui_panel.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4452,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 150.0
	},
	"output.exec":
	{
		"height": 267.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Odin-Run.sublime-build",
	"project": "ui-odin.sublime-project",
	"replace":
	{
		"height": 794.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
